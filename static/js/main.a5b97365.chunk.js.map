{"version":3,"sources":["components/ContactForm/ContactForm.module.css","utils/transitions/pop.module.css","components/ContactList/ContactList.module.css","components/ContactFilter/ContactFilter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","evt","target","value","resetInput","form","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","error","info","label","input","type","onChange","placeholder","options","delimiter","blocks","button","ContactList","visibleContacts","CSSTransition","in","length","timeout","classNames","popTransition","mountOnEnter","unmountOnExit","TransitionGroup","component","list","map","item","data","onClick","ContactFilter","App","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a5b97365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__UKBUR\",\"label\":\"ContactForm_label__6FIMt\",\"input\":\"ContactForm_input__ihSPT\",\"button\":\"ContactForm_button__1-MMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__30Wcf\",\"enterActive\":\"pop_enterActive__2UG9C\",\"exit\":\"pop_exit__1c1xm\",\"exitActive\":\"pop_exitActive__3sKDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Boha4\",\"item\":\"ContactList_item__1x1Wp\",\"data\":\"ContactList_data__1_-_g\",\"button\":\"ContactList_button__2GrmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__23l2z\",\"input\":\"ContactFilter_input__20Epm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__u6pqj\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './contacts-types';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction(DELETE_CONTACT);\r\nexport const filterContact = createAction(FILTER_CONTACT);","export const ADD_CONTACT = 'contacts/add';\r\nexport const FILTER_CONTACT = 'contacts/filter';\r\nexport const DELETE_CONTACT = 'contacts/delete';","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContact } from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport Cleave from 'cleave.js/react';\nimport { toast } from 'react-toastify';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n   const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`${name} is already in contacts.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`${number} is already in contacts.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\"Enter the name and phone number!\");\n    } else if (checkValidNumber(number)) {\n      toast.error('Enter the correct phone number!');\n    } else {\n      dispatch(addContact(name, number));\n    }\n    resetInput();\n  };\n\n   const resetInput = () => {\n    setName('');\n    setNumber('');\n   };\n  \n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter the name\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <Cleave\n          options={{ delimiter: '-', blocks: [3, 2, 2] }}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n          placeholder=\"555-55-55\"\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getVisibleContacts,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport popTransition from '../../utils/transitions/pop.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <>\n      <CSSTransition\n        in={!contacts.length}\n        timeout={250}\n        classNames={popTransition}\n        mountOnEnter\n        unmountOnExit\n      >\n        <p>Your phonebook is empty. Please add contact.</p>\n      </CSSTransition>\n      <TransitionGroup component=\"ul\" className={s.list}>\n        {visibleContacts.map(({ id, name, number }) => (\n          <CSSTransition\n            key={id}\n            timeout={250}\n            mountOnEnter\n            unmountOnExit\n            classNames={popTransition}\n          >\n            <li className={s.item}>\n              <p className={s.data}>\n                <p>{name}</p>\n                <p>{number}</p>\n              </p>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n}\n\nexport default ContactList;","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getFilter,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { CSSTransition } from 'react-transition-group';\nimport popTransition from '../../utils/transitions/pop.module.css';\n\nimport s from './ContactFilter.module.css';\n\nfunction ContactFilter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <CSSTransition\n      in={contacts.length > 0}\n      timeout={250}\n      classNames={popTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filter}\n          // placeholder=\"Enter something\"\n          onChange={evt => dispatch(filterContact(evt.target.value))}\n        />\n      </label>\n    </CSSTransition>\n  );\n}\n\nexport default ContactFilter;","import Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactFilter from './components/ContactFilter/ContactFilter';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactFilter />\n      <ContactList />\n      <ToastContainer autoClose={3700} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}